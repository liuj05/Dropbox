package CS6348FinalProject.proj;

import com.dropbox.core.DbxException;
import com.dropbox.core.DbxRequestConfig;
import com.dropbox.core.v2.DbxClientV2;
import com.dropbox.core.v2.async.LaunchEmptyResult.Tag;
import com.dropbox.core.v2.files.FileMetadata;
import com.dropbox.core.v2.files.ListFolderContinueErrorException;
import com.dropbox.core.v2.files.ListFolderResult;
import com.dropbox.core.v2.files.Metadata;
import com.dropbox.core.v2.files.UploadErrorException;
import com.dropbox.core.v2.users.FullAccount;
import com.dropbox.core.v2.sharing.*;

import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.List;
import java.util.Scanner;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.spec.IvParameterSpec;

public class App {
    private static final String ACCESS_TOKEN = "OTc3CCGa3mAAAAAAAAAACqeFwpCcohAGJOloaIX4ADetv-VDwkw8Imknthkf_Uls";
    public static int count = 0;
    
    public void show() throws ListFolderContinueErrorException, DbxException, IOException
    {
    	// Create Dropbox client
        DbxRequestConfig config = new DbxRequestConfig("dropbox/java-tutorial", "en_US");
        DbxClientV2 client = new DbxClientV2(config, ACCESS_TOKEN);

        // Get current account info
        FullAccount account = client.users().getCurrentAccount();
        System.out.println(account.getName().getDisplayName());
        
      
        // Get files and folder metadata from Dropbox root directory
        ListFolderResult result = client.files().listFolder("");
        while (true) {
            for (Metadata metadata : result.getEntries()) {
                System.out.println(metadata.getPathLower());
            }

            if (!result.getHasMore()) {
                break;
            }

            result = client.files().listFolderContinue(result.getCursor());
        }
    }
    
    public void upload() throws Exception
    {    	
    	// Create Dropbox client
        DbxRequestConfig config = new DbxRequestConfig("dropbox/java-tutorial", "en_US");
        DbxClientV2 client = new DbxClientV2(config, ACCESS_TOKEN);

        
        //get path
        String path = "D:\\UTD\\1. Data and Application Security\\Project\\test.txt";
        
        
        //get file name
        String[] split = path.split("\\\\");
        String file_name = "/" + split[split.length - 1];
        
        
        //get content in the file
        String file_content = new Scanner(new File(path)).useDelimiter("\\Z").next();
        
        //initiallize instant for encryption
        AESEncryption aes = new AESEncryption();
        
        //get secret key for encrypt file
        SecretKey key_file = aes.generateKey();
        
        //get iv byte array
        byte[] iv_byte = aes.get_iv_bytes();
        IvParameterSpec iv = aes.get_iv(iv_byte);        
        
        //get key for hmac
        SecretKey key_hmac = aes.generateKey();
        
        //encrypt file content
        String file_enc = aes.doEnc(file_content, key_file, iv);
        
        //hmac of cipher
        String file_hmac = aes.SHA512(file_enc, key_hmac);
        
        //Concatenate file key, iv and hmac key;
        String key_file_str = aes.saveKey(key_file);
        String key_hmac_str = aes.saveKey(key_hmac);
        String iv_str = aes.bytesToStr(iv_byte);
        
        byte[] test = aes.stringToByte(iv_str);
        
        System.out.println(iv_byte.toString());
        System.out.println(iv_str);
        System.out.println(iv_str.getBytes());
        
        // Upload "test.txt" to Dropbox
        try (InputStream in = new FileInputStream(path)) {
            FileMetadata metadata = client.files().uploadBuilder(file_name)
                .uploadAndFinish(in);
            System.out.println(file_name + " Upload Success!");
        }
    }
    
    public static void main(String args[]) throws Exception 
    {        
    	App a = new App();
    	a.upload();
    }
}